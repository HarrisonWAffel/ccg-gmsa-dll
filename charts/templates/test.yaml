# todo; remove me from chart, only here for dev work

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-reader
  namespace: cattle-windows-gmsa-system
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-reader
  namespace: cattle-windows-gmsa-system
subjects:
  - kind: ServiceAccount
    name: rancher-windows-gmsa
    apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: secret-reader
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
metadata:
  name: test
  namespace: cattle-windows-gmsa-system
type: Opaque
data:
  username: user
  password: password
  domainName: test.com

---
# todo; add new service account, rn just using default gmsa account

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gmsa-provider-deployment
  namespace: cattle-windows-gmsa-system
  labels:
    app: gmsa-provider
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gmsa-provider
  template:
    metadata:
      labels:
        app: gmsa-provider
    spec:
      serviceAccount: rancher-windows-gmsa
      serviceAccountName: rancher-windows-gmsa
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: windows
      containers:
        - name: provider
          image: harrisonwaffel/gmsa:latest
          securityContext:
            windowsOptions:
              hostProcess: true
              runAsUserName: "NT AUTHORITY\\Local service"
          env:
            - name: ACTIVE_DIRECTORY
              value: test
            - name: RELEASE_NAMESPACE
              value: test

---

# test gmsa workload,
# it's a bit big

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: win-webserver
  name: win-webserver
  namespace: cattle-windows-gmsa-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: win-webserver
  template:
    metadata:
      labels:
        app: win-webserver
      name: win-webserver
    spec:
      serviceAccount: rancher-windows-gmsa
      serviceAccountName: rancher-windows-gmsa
      containers:
        - name: windowswebserver
          image: mcr.microsoft.com/windows/servercore:ltsc2022
          securityContext:
            windowsOptions:
              gmsaCredentialSpecName: test
          command:
            - powershell.exe
            - -command
            - "<#code used from https://gist.github.com/19WAS85/5424431#> ; $$listener = New-Object System.Net.HttpListener ; $$listener.Prefixes.Add('http://*:80/') ; $$listener.Start() ; $$callerCounts = @{} ; Write-Host('Listening at http://*:80/') ; while ($$listener.IsListening) { ;$$context = $$listener.GetContext() ;$$requestUrl = $$context.Request.Url ;$$clientIP = $$context.Request.RemoteEndPoint.Address ;$$response = $$context.Response ;Write-Host '' ;Write-Host('> {0}' -f $$requestUrl) ;  ;$$count = 1 ;$$k=$$callerCounts.Get_Item($$clientIP) ;if ($$k -ne $$null) { $$count += $$k } ;$$callerCounts.Set_Item($$clientIP, $$count) ;$$ip=(Get-NetAdapter | Get-NetIpAddress); $$header='<html><body><H1>Windows Container Web Server</H1>' ;$$callerCountsString='' ;$$callerCounts.Keys | % { $$callerCountsString+='<p>IP {0} callerCount {1} ' -f $$ip[1].IPAddress,$$callerCounts.Item($$_) } ;$$footer='</body></html>' ;$$content='{0}{1}{2}' -f $$header,$$callerCountsString,$$footer ;Write-Output $$content ;$$buffer = [System.Text.Encoding]::UTF8.GetBytes($$content) ;$$response.ContentLength64 = $$buffer.Length ;$$response.OutputStream.Write($$buffer, 0, $$buffer.Length) ;$$response.Close() ;$$responseStatus = $$response.StatusCode ;Write-Host('< {0}' -f $$responseStatus)  } ; "
      nodeSelector:
        kubernetes.io/os: windows